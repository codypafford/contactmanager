{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","console","log","payload","id","type","contacts","filter","newArray","slice","push","name","map","contact","Provider","dispatch","returned","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","num","onShowClick","newNum","onDeleteClick","a","className","onClick","style","cursor","float","color","to","marginRight","email","phone","website","Contacts","Fragment","key","Header","href","branding","defaultProps","About","NotFound","Test","title","body","fetch","then","response","json","testProp","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","onSubmit","e","preventDefault","newContact","uuid","history","inputName","target","testChange","bind","EditContact","match","params","App","exact","path","component","render","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.9b17e106.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\nconst reducer = (state, action) => {\r\n  console.log(action.payload.id);\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      console.log(`action id is  + ${action.payload}`);\r\n      return {\r\n        //  ...state, //take the existing state\r\n        contacts: state.contacts.filter(\r\n          (contacts) => contacts.id !== action.payload\r\n        ),\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      let newArray = state.contacts.slice(); // get the current contacts array\r\n      newArray.push(action.payload); //push on the new contact\r\n      return {\r\n        //  ...state, //take the existing state...probably not needed though...\r\n        contacts: newArray,\r\n      };\r\n    case \"EDIT_CONTACT\":\r\n      //let editedArray = state.contacts.slice(); // get the current contacts array\r\n      //  newArray.push(action.payload); //push on the new contact\r\n      console.log(`action id is.....  + ${action.id}`);\r\n      console.log(` the payload is .... + ${action.payload.name}`);\r\n      console.log(state.contacts);\r\n\r\n      return {\r\n        //  ...state, //take the existing state...probably not needed though...\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id == action.id ? (contact = action.payload) : contact\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport class Provider extends Component {\r\n  // this is basically our global state dfdf\r\n\r\n  state = {\r\n    contacts: [],\r\n    dispatch: (action) => {\r\n      //  this.setState((state) => reducer(state, action));\r\n\r\n      // another way to do the above arrow function\r\n      const returned = reducer(this.state, action);\r\n      this.setState(returned);\r\n    },\r\n  };\r\n\r\n  async componentDidMount() {\r\n    // set the state with the contacts\r\n    // await is important\r\n    const res = await axios.get(\"http://jsonplaceholder.typicode.com/users\");\r\n\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false,\r\n    num: 1, // this is useless. just for testing things\r\n  };\r\n\r\n  // uses arrow function because otherwise we couldn't use 'this'\r\n  onShowClick = () => {\r\n    console.log(\"clicked\");\r\n    var newNum = this.state.num;\r\n    newNum = newNum + 1;\r\n    this.setState({\r\n      showContactInfo: !this.state.showContactInfo,\r\n      num: newNum,\r\n    });\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    // this is a function which is a part of the global state\r\n\r\n    // this would delete from the database\r\n    // const res = await axios.delete(\r\n    //   `http://jsonplaceholder.typicode.com/users/${id}`\r\n    // );\r\n\r\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n  };\r\n\r\n  render() {\r\n    //pull boolean out of this.state\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {this.props.name}\r\n                <i\r\n                  onClick={this.onShowClick}\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                ></i>\r\n                <i\r\n                  onClick={() => this.onDeleteClick(this.props.id, dispatch)}\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                ></i>\r\n                <Link to={`contacts/edit/${this.props.id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\",\r\n                      marginRight: \"1rem\",\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {this.props.email}</li>\r\n                  <li className=\"list-group-item\">Phone: {this.props.phone}</li>\r\n                  <li className=\"list-group-item\">\r\n                    Website: {this.props.website}\r\n                  </li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  email: PropTypes.string.isRequired,\r\n  phone: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\n\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact </span>List\r\n              </h1>\r\n              {contacts.map((contact) => (\r\n                <Contact\r\n                  key={contact.id}\r\n                  id={contact.id}\r\n                  name={contact.name}\r\n                  email={contact.email}\r\n                  phone={contact.phone}\r\n                  website={contact.website}\r\n                />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"#!\" className=\"navbar-brand\">\r\n          {props.branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\">Home</i>\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contacts/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\">Add</i>\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\">About</i>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\",\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">404 Page Not Found</h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: \"\",\r\n    body: \"\",\r\n  };\r\n  // this function is part of react so we do not need to use arrow function\r\n  // 'this' will be available\r\n  //usually where HTTP calls or backend stuff would happen like AJAX\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/todos/1\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          title: data.title,\r\n          body: data.body,\r\n        });\r\n        console.log(\"testing!!\");\r\n      });\r\n\r\n    fetch(\"https://jsonplaceholder.typicode.com/todos/1\")\r\n      .then((response) => response.json())\r\n      .then((json) => console.log(json));\r\n  }\r\n\r\n  //   UNSAFE_componentWillMount() {\r\n  //     console.log(\"componentWillMount...\");\r\n  //   }\r\n\r\n  //   // this will be ran everytime a component has changed such as the state changing values\r\n  //   componentDidUpdate() {\r\n  //     console.log(\"componentDidMount...\");\r\n  //   }\r\n\r\n  //   UNSAFE_componentWillReceiveProps(nextProps, nextState) {\r\n  //     console.log(\"componentWillRecieveProps...\");\r\n  //   }\r\n\r\n  //   static getDerivedStateFromProps(nextProps, prevState) {\r\n  //     return {\r\n  //       test: \"Something\", // changes the state\r\n  //     };\r\n  //   }\r\n\r\n  //   getSnapshotBeforeUpdate(prevProps, prevState) {\r\n  //     console.log(\"getSnapshotBEforeUpdate\");\r\n  //   }\r\n\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <h3>{this.props.testProp}</h3>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  // if we did not list label, name, etc, then we\r\n  //could just put the word 'props' there and then use it like: props.label\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error,\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        // first param are class names we always want, second param has the conditional classname\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error,\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\",\r\n};\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault(); // prevent from going to another page\r\n    const { name, email, phone } = this.state;\r\n\r\n    //Check for errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is Required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is Required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is Required\" } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      id: uuid(),\r\n      name: name,\r\n      email: email,\r\n      phone: phone,\r\n    };\r\n\r\n    // try {\r\n    //   axios\r\n    //     .post(\"http://jsonplaceholder.typicode.com/users\", newContact) // post will return the newly created contact as an object. access with .data\r\n    //     .then((res) => dispatch({ type: \"ADD_CONTACT\", payload: res.data }));\r\n    // } catch (e) {\r\n    dispatch({ type: \"ADD_CONTACT\", payload: newContact });\r\n    // }\r\n\r\n    // clear state\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {},\r\n    });\r\n\r\n    // redirect to another part of the application\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onChange = (inputName, e) => this.setState({ [inputName]: e.target.value });\r\n\r\n  testChange = () => {\r\n    //  console.log(e.target.value);\r\n    console.log(\"hhhhh\");\r\n    //  console.log(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={(e) => this.onSubmit(dispatch, e)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={(e) => this.onChange(\"name\", e)}\r\n                    error={errors.name}\r\n                  ></TextInputGroup>\r\n\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onChange={this.onChange.bind(this, \"email\")}\r\n                    error={errors.email}\r\n                  ></TextInputGroup>\r\n\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange.bind(this, \"phone\")}\r\n                    error={errors.phone}\r\n                  ></TextInputGroup>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                  <input type=\"text\" onChange={this.testChange}></input>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  async componentDidMount() {\r\n    //name of the param must match the name of the param that was passed into the URL\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.get(\r\n      `http://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone,\r\n    });\r\n    console.log(res);\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault(); // prevent from going to another page\r\n    const { name, email, phone } = this.state;\r\n    const { id } = this.props.match.params;\r\n\r\n    //Check for errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is Required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is Required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is Required\" } });\r\n      return;\r\n    }\r\n\r\n    const editedContact = {\r\n      id: id,\r\n      name: name,\r\n      email: email,\r\n      phone: phone,\r\n    };\r\n\r\n    dispatch({ type: \"EDIT_CONTACT\", id: id, payload: editedContact });\r\n\r\n    // clear state\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {},\r\n    });\r\n\r\n    // redirect to another part of the application\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onChange = (inputName, e) => this.setState({ [inputName]: e.target.value });\r\n\r\n  testChange = () => {\r\n    //  console.log(e.target.value);\r\n    console.log(\"hhhhh\");\r\n    //  console.log(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={(e) => this.onSubmit(dispatch, e)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={(e) => this.onChange(\"name\", e)}\r\n                    error={errors.name}\r\n                  ></TextInputGroup>\r\n\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onChange={this.onChange.bind(this, \"email\")}\r\n                    error={errors.email}\r\n                  ></TextInputGroup>\r\n\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange.bind(this, \"phone\")}\r\n                    error={errors.phone}\r\n                  ></TextInputGroup>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                  <input type=\"text\" onChange={this.testChange}></input>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\n\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\n\nimport { Provider } from \"./context\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager!\" />\n          <div className=\"container\">\n            {/* the switch is used like this: everytime app is redirected to \n            one of the paths below, that component will be rendered. \n            Paths are made in Header file*/}\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contacts/add\" component={AddContact} />\n              <Route exact path=\"/contacts/edit/:id\" component={EditContact} />\n\n              <Route exact path=\"/about/\" component={About} />\n\n              {/*this is how to pass props with the router*/}\n              <Route\n                exact\n                path=\"/test\"\n                render={() => <Test testProp=\"prop1\" />}\n              />\n\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\nconsole.log(`${1 + 1}`);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}